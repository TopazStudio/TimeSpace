type Query{

    viewer: User @auth

    user(
        method: QUERY_METHOD!
        id: ID
    ): [User!]! @field(resolver: "App\\GraphQL\\Query\\User@resolve")

    getUserDailyActivity(
        timestamp: Float!
        id: ID!
    ): UserActivity! @field(resolver: "App\\GraphQL\\Query\\User@getDailyActivity")

    getUserMonthlyActivity(
        timestamp: Float!
        id: ID!
    ): UserActivity! @field(resolver: "App\\GraphQL\\Query\\User@getMonthlyActivity")

    organization(
        method: QUERY_METHOD!
        id: ID
    ): [Organization!]! @field(resolver: "App\\GraphQL\\Query\\Organization@resolve")

    group(
        method: QUERY_METHOD!
        id: ID
    ): [Group!]! @field(resolver: "App\\GraphQL\\Query\\Group@resolve")

    searchUser(
        type: String
        property: String
        term: String
    ): UserSearchResults @field(resolver: "App\\GraphQL\\Query\\User@search")

    searchUserComplex(
        raw: String
    ): UserSearchResults @field(resolver: "App\\GraphQL\\Query\\User@search")

    searchOrganization(
        type: String
        property: String
        term: String
    ): OrganizationSearchResults @field(resolver: "App\\GraphQL\\Query\\Organization@search")

    searchGroup(
        type: String
        property: String
        term: String
    ): GroupSearchResults @field(resolver: "App\\GraphQL\\Query\\Group@search")
}